R = R
HIVE_SRC = ~/src/hive
RCPP_GEN_SRC = R/RcppExports.R inst/include/bee_RcppExports.h src/RcppExports.cpp
THRIFT_VERSION = $(shell pkg-config --modversion thrift)

package: $(RCPP_GEN_SRC)
	R CMD build .

install: package
	R CMD INSTALL bee_1.0.tar.gz

clean:
	rm -f $(RCPP_GEN_SRC)

# Generate the thrift client source & headers. We store code generated by all
# supported versions of thrift in the repo, so this should only need to be run
# when a new version of thrift needs to be supported.
thrift:
	rm -rf thrift/$(THRIFT_VERSION)
	mkdir -p thrift/$(THRIFT_VERSION)
	thrift -I $(HIVE_SRC) -r --gen cpp -o thrift/$(THRIFT_VERSION) $(HIVE_SRC)/service/if/TCLIService.thrift
	rm -f thrift/$(THRIFT_VERSION)/gen-cpp/*.skeleton.cpp

	rm -rf inst/include/tcli_thrift
	mkdir -p inst/include/tcli_thrift
	cp thrift/$(THRIFT_VERSION)/gen-cpp/*.h inst/include/tcli_thrift/

	rm -rf src/tcli_thrift
	mkdir -p src/tcli_thrift
	cp thrift/$(THRIFT_VERSION)/gen-cpp/*.cpp src/tcli_thrift/

$(RCPP_GEN_SRC): src/extension.cpp
	$(eval tmp := $(shell mktemp -d))
	echo 'library(Rcpp)' > $(tmp)/in.R
	echo 'compileAttributes()' >> $(tmp)/in.R
	$(R) CMD BATCH $(tmp)/in.R $(tmp)/out
	rm -rf $(tmp)/in.R $(tmp)/out

.PHONY: package install thrift clean
